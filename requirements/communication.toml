[requirement.radio]
description = "These requirements targets the low level radio communication."

[requirement.radio.latencysmall]
description = "Link round-trip latency for small radio packets (4 bytes)"
rational = "Empirical"
packet_size = 4
limit_high_ms = 8

[requirement.radio.latencybig]
description = "Link round-trip latency for small radio packets (28 bytes)"
rational = "Empirical"
packet_size = 28
limit_high_ms = 8

[requirement.radio.bwsmall]
description = "Packet rate (packets per seconds) for small radio packets (4 bytes)"
rational = "Empirical"
background = """
This is what a Raspberry Pi 4 running a 64-bit distro manages through Docker.
Which can be viewed as our lowest supported system.
"""
packet_size = 4
limit_low = 600

[requirement.radio.bwbig]
description = "Packet rate (packets per seconds) for big radio packet (28 bytes)"
rational = "Empirical"
background = """
This is what a Raspberry Pi 4 running a 64-bit distro manages through Docker.
Which can be viewed as our lowest supported system.
"""
packet_size = 28
limit_low = 350

[requirement.radio.reliability]
description = "Packet exchange without any information loss"
rational = "Design"
background = """
The design is that there should never be any packet loss ever. So we should be
able to exchange an infinit amount of packet.
However, testing infinity is hard so, as a compromise, we are testing on
30 000 packets which takes ~= 30s to test.
"""
limit_low = 30_000   # It is hard to test infinity ....
